@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Forgot Password</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-select.min.css" rel="stylesheet" />
    <link href="~/Content/fuelux.min.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/bootstrapValidator.min.css" rel="stylesheet" />

</head>
<body>
    <div id="popup" style="display:none">
        <div class="container">
            <form id="entityform" method="post">
                <div class="row">
                    <div class="form-group">
                        <label for="UserName" class="cols-sm-2 control-label">User Name</label>
                        <div class="cols-sm-10">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-text-width" aria-hidden="true"></i></span>
                                <input type="text" value="" id="UserName" name="UserName" class="form-control" placeholder="Enter User Name" />
                            </div>
                        </div>
                    </div>
                </div>
                <div id="securitydiv"></div>
            </form>
        </div>
    </div>
</body>
</html>

<script src="~/Scripts/jquery-3.1.1.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/bootbox.min.js"></script>
<script src="~/Scripts/fuelux.min.js"></script>
<script src="~/Scripts/bootstrap-select.min.js"></script>
<script src="~/Scripts/bootstrapValidator.min.js"></script>

<script src="~/Scripts/Utilities.js"></script>
<script type="text/javascript">
    //$('#LMSSecurityQuestionId').selectpicker();
    //$('#LMSSecurityQuestionId').selectpicker();
    $(document).ready(function () {
        var div = $('#popup').html();
        //dialog = bootbox.dialog({
        //    message: div,
        //    //size: 'large',
        //    buttons: {
        //        cancel: {
        //            label: '<i class="fa fa-times"></i> Cancel'
        //        },
        //        confirm: {
        //            label: '<i class="fa fa-check"></i> Confirm',
        //            callback: function (result) {
        //                var form = dialog.find('#entityform');
        //                form.bootstrapValidator({
        //                    message: 'This value is not valid',
        //                    feedbackIcons: {
        //                        valid: 'glyphicon glyphicon-ok',
        //                        invalid: 'glyphicon glyphicon-remove',
        //                        validating: 'glyphicon glyphicon-refresh'
        //                    },
        //                    fields: {
        //                        UserName: {
        //                            validators: {
        //                                notEmpty: {
        //                                    message: 'UserName is required.'
        //                                }
        //                            }
        //                        },
        //                        SecurityAnswer: {
        //                            validators: {
        //                                notEmpty: {
        //                                    message: 'Security Answer is required.'
        //                                }
        //                            }
        //                        },
        //                        LMSSecurityQuestionId: {
        //                            validators: {
        //                                callback: {
        //                                    message: 'Security Question is required.',
        //                                    callback: function (value, validator, $field) {
        //                                        /* Get the selected options */
        //                                        var options = validator.getFieldElements('LMSSecurityQuestionId').val();
        //                                        return (options !== '-1');
        //                                    }
        //                                }
        //                            }
        //                        },
        //                    }
        //                });
        //                var validator = form.data('bootstrapValidator');
        //                validator.validate();

        //                if (validator.isValid()) {
        //                    var UserName = dialog.find('#UserName').val();
        //                    var LMSSecurityQuestionId = dialog.find('#LMSSecurityQuestionId').val();
        //                    var SecurityAnswer = dialog.find('#SecurityAnswer').val();
        //                    var model = {
        //                        UserName: UserName,
        //                        LMSSecurityQuestionId: LMSSecurityQuestionId,
        //                        SecurityAnswer: SecurityAnswer,
        //                    };
        //                    $.ajax({
        //                        type: 'post',
        //                        url: '/login/ForgotPassword',
        //                        data: model
        //                    })
        //                    .done(function (data) {
        //                        if (data && data.isSuccess) {
        //                            dialog.modal('hide');
        //                            bootbox.alert("Your new password is : " + data.message, function () { location.href = '/login/index'; });
        //                        }
        //                        else {
        //                            //dialog.modal('hide');
        //                            bootbox.alert(data.message);
        //                        }
        //                    })
        //                    .fail(function (x, y, x) {
        //                        alert("error");
        //                    });
        //                }
        //                else
        //                    return false;
        //            }
        //        }
        //    },
        //    onEscape: function () {
        //        this.modal('hide');
        //    }
        //});
        //dialog.find("#UserName").blur(function () {
        //    if ($(this).val()) {
        //        var model = {
        //            UserName: $(this).val()
        //        };
        //        $.ajax({
        //            type: 'post',
        //            url: '/login/LoadSecurity',
        //            data: model
        //        })
        //        .done(function (data) {
        //            if (data) {
        //                dialog.find('#securitydiv').html(data);
        //                dialog.find('#LMSSecurityQuestionId').selectpicker({ width: '27%' });
        //            }
        //        })
        //        .fail(function (x, y, x) {
        //            alert("error");
        //        });
        //    }
        //    else {
        //        dialog.find('#questiondiv').hide();
        //        dialog.find('#answerdiv').hide();
        //    }
        //});

        dialog = bootbox.dialog({
            message: div,
            //size: 'large',
            buttons: {
                cancel: {
                    label: '<i class="fa fa-times"></i> Cancel',
                    callback: function (result) {
                        location.href = GetRootDirectory() + '/login/index';
                    }
                },
                confirm: {
                    label: '<i class="fa fa-check"></i> Confirm',
                    callback: function (result) {
                        var form = dialog.find('#entityform');
                        form.bootstrapValidator({
                            message: 'This value is not valid',
                            feedbackIcons: {
                                valid: 'glyphicon glyphicon-ok',
                                invalid: 'glyphicon glyphicon-remove',
                                validating: 'glyphicon glyphicon-refresh'
                            },
                            fields: {
                                UserName: {
                                    validators: {
                                        notEmpty: {
                                            message: 'User Name is required.'
                                        }
                                    }
                                }
                            }
                        });
                        var validator = form.data('bootstrapValidator');
                        validator.validate();

                        if (validator.isValid()) {
                            var UserName = dialog.find('#UserName').val();
                            var model = {
                                UserName: UserName,
                            };
                            $.ajax({
                                type: 'post',
                                url: GetRootDirectory() + '/login/LoadSecurity',
                                data: model
                            })
                            .done(function (data) {
                                if (data) {
                                    dialog.modal('hide');
                                    if (data)
                                        LoadSecurityDiv(data, UserName);
                                    else {
                                        bootbox.alert("User Name does not exists.");
                                        dialog.show();
                                    }
                                }
                                else {
                                    //dialog.modal('hide');
                                    bootbox.alert(data.message);
                                }
                            })
                            .fail(function (x, y, x) {
                                alert("error");
                            });
                        }
                        else
                            return false;
                    }
                }
            },
            onEscape: function () {
                this.modal('hide');
                location.href = GetRootDirectory() + '/login/index';
            }
        });

    });

    function LoadSecurityDiv(data, UserName) {
        var div = '<div class=container ><form id="entityform" method="post"><input type="hidden" name="UserName" id="UserName" value="" />' + data + '</form></div>';
        dialog = bootbox.dialog({
            message: div,
            //size: 'large',
            buttons: {
                cancel: {
                    label: '<i class="fa fa-times"></i> Cancel',
                    callback: function (result) {
                        location.href = GetRootDirectory() + '/login/index';
                    }
                },
                confirm: {
                    label: '<i class="fa fa-check"></i> Confirm',
                    callback: function (result) {
                        var form = dialog.find('#entityform');
                        form.bootstrapValidator({
                            message: 'This value is not valid',
                            feedbackIcons: {
                                valid: 'glyphicon glyphicon-ok',
                                invalid: 'glyphicon glyphicon-remove',
                                validating: 'glyphicon glyphicon-refresh'
                            },
                            fields: {
                                SecurityAnswer: {
                                    validators: {
                                        notEmpty: {
                                            message: 'Security Answer is required.'
                                        }
                                    }
                                },
                                RNDSecurityQuestionId: {
                                    validators: {
                                        callback: {
                                            message: 'Security Question is required.',
                                            callback: function (value, validator, $field) {
                                                /* Get the selected options */
                                                var options = validator.getFieldElements('RNDSecurityQuestionId').val();
                                                return (options !== '-1');
                                            }
                                        }
                                    }
                                },
                            }
                        });
                        var validator = form.data('bootstrapValidator');
                        validator.validate();

                        if (validator.isValid()) {
                            var UserName = dialog.find('#UserName').val();
                            var RNDSecurityQuestionId = dialog.find('#RNDSecurityQuestionId').val();
                            var SecurityAnswer = dialog.find('#SecurityAnswer').val();
                            var model = {
                                UserName: UserName,
                                RNDSecurityQuestionId: RNDSecurityQuestionId,
                                SecurityAnswer: SecurityAnswer,
                            };
                            $.ajax({
                                type: 'post',
                                url: GetRootDirectory() + '/login/ForgotPassword',
                                data: model
                            })
                            .done(function (data) {
                                if (data && data.isSuccess) {
                                    dialog.modal('hide');
                                    bootbox.alert("Your new password is : " + data.message, function () { location.href = GetRootDirectory() + '/login/index'; });
                                }
                                else {
                                    bootbox.alert(data.message);
                                    delay(function () {
                                        location.href = GetRootDirectory() + '/login/index';
                                    }, 2000);
                                }
                            })
                            .fail(function (x, y, x) {
                                alert("error");
                            });
                        }
                        else
                            return false;
                    }
                }
            },
            onEscape: function () {
                this.modal('hide');
                location.href = GetRootDirectory() + '/login/index';
            }
        });

        dialog.find('#RNDSecurityQuestionId').selectpicker({ width: '27%' });
        dialog.find('#UserName').val(UserName);
    }

    var delay = (function () {
        var timer = 0;
        return function (callback, ms) {
            clearTimeout(timer);
            timer = setTimeout(callback, ms);
        };
    })();

</script>